"use strict";(self.webpackChunkambari_website=self.webpackChunkambari_website||[]).push([[8786],{28453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>l});var a=r(96540);const s={},i=a.createContext(s);function t(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),a.createElement(i.Provider,{value:n},e.children)}},87815:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"quick-start/installation-guide","title":"Ambari Installation Guide","description":"This guide covers the installation and setup of Apache Ambari on bare metal, KVM, Docker, or Vagrant environments.","source":"@site/docs/quick-start/installation-guide.md","sourceDirName":"quick-start","slug":"/quick-start/installation-guide","permalink":"/docs/next/quick-start/installation-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/vivostar/vivostar.github.io/tree/master/docs/quick-start/installation-guide.md","tags":[],"version":"current","frontMatter":{},"sidebar":"ambariSidebar","previous":{"title":"Bare Metal and KVM Environment Setup for Apache Ambari","permalink":"/docs/next/quick-start/environment-setup/bare-metal-kvm-setup"},"next":{"title":"Ambari Design","permalink":"/docs/next/ambari-design/"}}');var s=r(74848),i=r(28453);const t={},l="Ambari Installation Guide",o={},d=[{value:"Important: Firewall Configuration",id:"important-firewall-configuration",level:2},{value:"Development &amp; Testing Environments",id:"development--testing-environments",level:3},{value:"Production Environments",id:"production-environments",level:3},{value:"For System Administrators",id:"for-system-administrators",level:4},{value:"Prerequisites",id:"prerequisites",level:2},{value:"1. Setting up Ambari Repository",id:"1-setting-up-ambari-repository",level:2},{value:"2. Install Dependencies and Ambari Agent",id:"2-install-dependencies-and-ambari-agent",level:2},{value:"3. Install Ambari Server",id:"3-install-ambari-server",level:2},{value:"4. Database Setup",id:"4-database-setup",level:2},{value:"4.1 MySQL Setup",id:"41-mysql-setup",level:3},{value:"4.2 PostgreSQL Setup",id:"42-postgresql-setup",level:3},{value:"5. Configure Ambari Server",id:"5-configure-ambari-server",level:2},{value:"For PostgreSQL:",id:"for-postgresql",level:3},{value:"For MySQL:",id:"for-mysql",level:3},{value:"6. Start Services",id:"6-start-services",level:2},{value:"7. Access Ambari Web Interface",id:"7-access-ambari-web-interface",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"ambari-installation-guide",children:"Ambari Installation Guide"})}),"\n",(0,s.jsx)(n.p,{children:"This guide covers the installation and setup of Apache Ambari on bare metal, KVM, Docker, or Vagrant environments."}),"\n",(0,s.jsx)(n.h2,{id:"important-firewall-configuration",children:"Important: Firewall Configuration"}),"\n",(0,s.jsx)(n.admonition,{title:"Before You Begin",type:"tip",children:(0,s.jsx)(n.p,{children:"Firewall settings can significantly impact cluster functionality by blocking necessary communication ports between components. Please review the following guidelines carefully."})}),"\n",(0,s.jsx)(n.h3,{id:"development--testing-environments",children:"Development & Testing Environments"}),"\n",(0,s.jsx)(n.p,{children:"For development or testing environments, consider disabling the firewall:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"systemctl stop firewalld\nsystemctl disable firewalld\n"})}),"\n",(0,s.jsx)(n.h3,{id:"production-environments",children:"Production Environments"}),"\n",(0,s.jsx)(n.h4,{id:"for-system-administrators",children:"For System Administrators"}),"\n",(0,s.jsx)(n.p,{children:"Configure the firewall to allow required Hadoop ecosystem ports based on your specific component deployment:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Component"}),(0,s.jsx)(n.th,{children:"Ports"}),(0,s.jsx)(n.th,{children:"Purpose"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Ambari Server"}),(0,s.jsx)(n.td,{children:"8080, 8440, 8441"}),(0,s.jsx)(n.td,{children:"Web UI, Agent communication"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Core Hadoop"}),(0,s.jsx)(n.td,{children:"8020, 9000, 50070, 50075"}),(0,s.jsx)(n.td,{children:"HDFS NameNode, DataNode HTTP"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"YARN"}),(0,s.jsx)(n.td,{children:"8032, 8088, 19888"}),(0,s.jsx)(n.td,{children:"ResourceManager, UI, JobHistory"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Hive"}),(0,s.jsx)(n.td,{children:"9083, 10000"}),(0,s.jsx)(n.td,{children:"Metastore, HiveServer2"})]})]})]}),"\n",(0,s.jsx)(n.admonition,{title:"NodeManager Ports",type:"note",children:(0,s.jsxs)(n.p,{children:["YARN NodeManagers allocate containers on dynamically assigned ports (default range: 32768-65535).\nThis range can be restricted via ",(0,s.jsx)(n.code,{children:"yarn.nodemanager.resource.ports"})," in ",(0,s.jsx)(n.code,{children:"yarn-site.xml"})]})}),"\n",(0,s.jsxs)(n.admonition,{title:"For General Users",type:"info",children:[(0,s.jsx)(n.p,{children:"If you're not familiar with advanced network configuration, we recommend:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Disabling the firewall during initial setup and cluster testing"}),"\n",(0,s.jsx)(n.li,{children:"Consulting with a network security specialist for production deployments"}),"\n"]})]}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.p,{children:["Ensure you have a working environment (bare metal, KVM, Docker, or ",(0,s.jsx)(n.a,{href:"/docs/next/quick-start/environment-setup/vagrant-environment-setup",children:"Vagrant setup"}),") before proceeding."]}),"\n",(0,s.jsx)(n.h2,{id:"1-setting-up-ambari-repository",children:"1. Setting up Ambari Repository"}),"\n",(0,s.jsx)(n.p,{children:"Create a local Ambari RPM repository:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"createrepo -o /path /path\n\n# Create repository configuration\ncat > /etc/yum.repos.d/ambari_repo.repo << EOF\n[ambari_repo]\nbaseurl = file:///vagrant_data/\ngpgcheck = 0\nname = ambari_repository\nEOF\n"})}),"\n",(0,s.jsx)(n.h2,{id:"2-install-dependencies-and-ambari-agent",children:"2. Install Dependencies and Ambari Agent"}),"\n",(0,s.jsx)(n.p,{children:"Install the following packages on all hosts:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install required dependencies\nyum install -y python3-distro\nyum install -y java-17-openjdk-devel\nyum install -y java-1.8.0-openjdk-devel\nyum install -y ambari-agent\n"})}),"\n",(0,s.jsx)(n.h2,{id:"3-install-ambari-server",children:"3. Install Ambari Server"}),"\n",(0,s.jsx)(n.p,{children:"On the designated Ambari server machine:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"yum install -y python3-psycopg2\nyum install -y ambari-server\n"})}),"\n",(0,s.jsx)(n.h2,{id:"4-database-setup",children:"4. Database Setup"}),"\n",(0,s.jsx)(n.p,{children:"Choose either MySQL or PostgreSQL for your database backend."}),"\n",(0,s.jsx)(n.h3,{id:"41-mysql-setup",children:"4.1 MySQL Setup"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Remove existing MySQL packages:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"rpm -qa | grep mysql\nrpm -ev <package-name> --nodeps\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Set up MySQL 8.0 repository:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"yum -y install https://dev.mysql.com/get/mysql80-community-release-el8-1.noarch.rpm\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Install and start MySQL:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"yum -y install mysql-server\nsystemctl start mysqld.service\nsystemctl enable mysqld.service\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsx)(n.li,{children:"Configure MySQL users and databases:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- Create Ambari user and grant privileges\nCREATE USER 'ambari'@'localhost' IDENTIFIED BY 'ambari';\nGRANT ALL PRIVILEGES ON *.* TO 'ambari'@'localhost';\nCREATE USER 'ambari'@'%' IDENTIFIED BY 'ambari';\nGRANT ALL PRIVILEGES ON *.* TO 'ambari'@'%';\n\n-- Create required databases\nCREATE DATABASE ambari CHARACTER SET utf8 COLLATE utf8_general_ci;\nCREATE DATABASE hive;\nCREATE DATABASE ranger;\nCREATE DATABASE rangerkms;\n\n-- Create service users\nCREATE USER 'hive'@'%' IDENTIFIED BY 'hive';\nGRANT ALL PRIVILEGES ON hive.* TO 'hive'@'%';\n\nCREATE USER 'ranger'@'%' IDENTIFIED BY 'ranger';\nGRANT ALL PRIVILEGES ON *.* TO 'ranger'@'%' WITH GRANT OPTION;\n\nCREATE USER 'rangerkms'@'%' IDENTIFIED BY 'rangerkms';\nGRANT ALL PRIVILEGES ON rangerkms.* TO 'rangerkms'@'%';\n\nFLUSH PRIVILEGES;\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"5",children:["\n",(0,s.jsx)(n.li,{children:"Import Ambari schema:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"mysql -uambari -pambari ambari < /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql\n"})}),"\n",(0,s.jsx)(n.h3,{id:"42-postgresql-setup",children:"4.2 PostgreSQL Setup"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Install and initialize PostgreSQL:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"yum install -y postgresql\n/usr/bin/postgresql-setup --initdb\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Configure PostgreSQL:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Edit postgresql.conf\nsed -i \"s/#listen_addresses = 'localhost'/listen_addresses = '*'/\" /var/lib/pgsql/data/postgresql.conf\n\n# Add client authentication rules to pg_hba.conf\ncat >> /var/lib/pgsql/data/pg_hba.conf << EOF\nhost ambari ambari 0.0.0.0/0 md5\nhost hive hive 0.0.0.0/0 md5\nhost ranger ranger 0.0.0.0/0 md5\nhost rangerkms rangerkms 0.0.0.0/0 md5\nEOF\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Create users and databases:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- As postgres user\nCREATE ROLE \"ambari\" LOGIN PASSWORD 'admin' NOINHERIT;\nCREATE DATABASE ambari;\nGRANT ALL PRIVILEGES ON DATABASE ambari TO ambari;\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsx)(n.li,{children:"Import schema:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"PGPASSWORD='admin' psql -h localhost -p 5432 -U ambari -d ambari \\\n  -f /var/lib/ambari-server/resources/Ambari-DDL-Postgres-CREATE.sql\n"})}),"\n",(0,s.jsx)(n.h2,{id:"5-configure-ambari-server",children:"5. Configure Ambari Server"}),"\n",(0,s.jsx)(n.h3,{id:"for-postgresql",children:"For PostgreSQL:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Setup JDBC driver\nambari-server setup --jdbc-db=postgres --jdbc-driver=/usr/share/java/postgresql-42.7.3.jar\n\n# Configure Ambari server\nambari-server setup -s \\\n  -j /usr/lib/jvm/java-1.8.0-openjdk \\\n  --ambari-java-home /usr/lib/jvm/java-17-openjdk \\\n  --database=postgres \\\n  --databasehost=localhost \\\n  --databaseport=5432 \\\n  --databasename=ambari \\\n  --databaseusername=ambari \\\n  --databasepassword=admin\n"})}),"\n",(0,s.jsx)(n.h3,{id:"for-mysql",children:"For MySQL:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Download MySQL JDBC driver\nwget https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.28/mysql-connector-java-8.0.28.jar \\\n  -O /usr/share/java/mysql-connector-java.jar\n\n# Setup JDBC driver\nambari-server setup --jdbc-db=mysql --jdbc-driver=/usr/share/java/mysql-connector-java.jar\n\n# Configure MySQL 8 compatibility\necho "server.jdbc.url=jdbc:mysql://localhost:3306/ambari?useSSL=true&verifyServerCertificate=false&enabledTLSProtocols=TLSv1.2" \\\n  >> /etc/ambari-server/conf/ambari.properties\n\n# Configure Ambari server\nambari-server setup -s \\\n  -j /usr/lib/jvm/java-1.8.0-openjdk \\\n  --ambari-java-home /usr/lib/jvm/java-17-openjdk \\\n  --database=mysql \\\n  --databasehost=localhost \\\n  --databaseport=3306 \\\n  --databasename=ambari \\\n  --databaseusername=ambari \\\n  --databasepassword=ambari\n'})}),"\n",(0,s.jsx)(n.h2,{id:"6-start-services",children:"6. Start Services"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Start Ambari Server:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ambari-server start\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Configure and start Ambari Agents on all hosts:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Edit ambari-agent configuration\nsed -i "s/hostname=.*/hostname=your_ambari_server_hostname/" /etc/ambari-agent/conf/ambari-agent.ini\n\n# Start agent\nambari-agent start\n'})}),"\n",(0,s.jsx)(n.h2,{id:"7-access-ambari-web-interface",children:"7. Access Ambari Web Interface"}),"\n",(0,s.jsx)(n.p,{children:"Once all services are started, access the Ambari Web Interface at:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"http://your_ambari_server_hostname:8080\n"})}),"\n",(0,s.jsx)(n.p,{children:"Default credentials:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Username: admin"}),"\n",(0,s.jsx)(n.li,{children:"Password: admin"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Ensure proper hostname resolution by configuring ",(0,s.jsx)(n.code,{children:"/etc/hosts"})," on all nodes."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["For MySQL 8 connection issues, verify the JDBC URL includes the correct SSL parameters in ",(0,s.jsx)(n.code,{children:"ambari.properties"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Check service logs:"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Ambari Server: ",(0,s.jsx)(n.code,{children:"/var/log/ambari-server/ambari-server.log"})]}),"\n",(0,s.jsxs)(n.li,{children:["Ambari Agent: ",(0,s.jsx)(n.code,{children:"/var/log/ambari-agent/ambari-agent.log"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);