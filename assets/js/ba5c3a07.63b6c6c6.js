"use strict";(self.webpackChunkambari_website=self.webpackChunkambari_website||[]).push([[4895],{20558:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"ambari-design/stack-and-services/index","title":"Stacks and Services","description":"Introduction","source":"@site/docs/ambari-design/stack-and-services/index.md","sourceDirName":"ambari-design/stack-and-services","slug":"/ambari-design/stack-and-services/","permalink":"/docs/next/ambari-design/stack-and-services/","draft":false,"unlisted":false,"editUrl":"https://github.com/vivostar/vivostar.github.io/tree/master/docs/ambari-design/stack-and-services/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"ambariSidebar","previous":{"title":"Quick Links","permalink":"/docs/next/ambari-design/quick-links"},"next":{"title":"Overview","permalink":"/docs/next/ambari-design/stack-and-services/overview"}}');var i=n(74848),r=n(28453);const a={},c="Stacks and Services",o={},d=[];function h(e){const t={h1:"h1",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"stacks-and-services",children:"Stacks and Services"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Introduction"})}),"\n",(0,i.jsx)(t.p,{children:"Ambari supports the concept of Stacks and associated Services in a Stack Definition. By leveraging the Stack Definition, Ambari has a consistent and defined interface to install, manage and monitor a set of Services and provides extensibility model for new Stacks + Services to be introduced."}),"\n",(0,i.jsx)(t.p,{children:"From Ambari 2.4, there is also support for the concept of Extensions and its associated custom Services in an Extension Definition."}),"\n",(0,i.jsx)(t.p,{children:"Terminology"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Term"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Stack"}),(0,i.jsx)(t.td,{children:'Defines a set of Services and where to obtain the software packages for those Services. A Stack can have one or more versions, and each version can be active/inactive. For example, Stack = "HDP-1.3.3".'})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Extension"}),(0,i.jsx)(t.td,{children:"Defines a set of custom Services which can be added to a stack version.  An Extension can have one or more versions."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Service"}),(0,i.jsx)(t.td,{children:'Defines the Components (MASTER, SLAVE, CLIENT) that make up the Service. For example, Service = "HDFS"'})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Component"}),(0,i.jsx)(t.td,{children:'The individual Components that adhere to a certain defined lifecycle (start, stop, install, etc). For example, Service = "HDFS" has Components = "NameNode (MASTER)", "Secondary NameNode (MASTER)", "DataNode (SLAVE)" and "HDFS Client (CLIENT)"'})]})]})]})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var s=n(96540);const i={},r=s.createContext(i);function a(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);