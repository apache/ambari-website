"use strict";(self.webpackChunkambari_website=self.webpackChunkambari_website||[]).push([[3100],{28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>d});var t=i(96540);const s={},c=t.createContext(s);function r(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(c.Provider,{value:n},e.children)}},64478:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"ambari-design/stack-and-services/writing-metainfo","title":"Writing metainfo.xml","description":"metainfo.xml is a declarative definition of an Ambari managed service describing its content. Itis the most critical file for any service definition. This section describes various key sub-sections within a metainfo.xml file.","source":"@site/versioned_docs/version-2.7.5/ambari-design/stack-and-services/writing-metainfo.md","sourceDirName":"ambari-design/stack-and-services","slug":"/ambari-design/stack-and-services/writing-metainfo","permalink":"/docs/2.7.5/ambari-design/stack-and-services/writing-metainfo","draft":false,"unlisted":false,"editUrl":"https://github.com/vivostar/vivostar.github.io/tree/master/versioned_docs/version-2.7.5/ambari-design/stack-and-services/writing-metainfo.md","tags":[],"version":"2.7.5","frontMatter":{},"sidebar":"ambariSidebar","previous":{"title":"Stack Properties","permalink":"/docs/2.7.5/ambari-design/stack-and-services/stack-properties"},"next":{"title":"FAQ","permalink":"/docs/2.7.5/ambari-design/stack-and-services/faq"}}');var s=i(74848),c=i(28453);const r={},d="Writing metainfo.xml",o={},a=[{value:"Sample metainfo.xml",id:"sample-metainfoxml",level:2}];function l(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"writing-metainfoxml",children:"Writing metainfo.xml"})}),"\n",(0,s.jsx)(n.p,{children:"metainfo.xml is a declarative definition of an Ambari managed service describing its content. Itis the most critical file for any service definition. This section describes various key sub-sections within a metainfo.xml file."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Non-mandatory fields are described in italics."})}),"\n",(0,s.jsx)(n.p,{children:"The top level fields to describe a service are as follows:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Feild"}),(0,s.jsx)(n.th,{children:"What is it used for"}),(0,s.jsx)(n.th,{children:"Sample Values"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"name"}),(0,s.jsx)(n.td,{children:"the name of the service. A name has to be unique among all the services that are included in the stack definition containing the service."}),(0,s.jsx)(n.td,{children:"HDFS"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"displayName"}),(0,s.jsx)(n.td,{children:"the display name of the service"}),(0,s.jsx)(n.td,{children:"HDFS"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"version"}),(0,s.jsx)(n.td,{children:"the version of the service. name and version together uniquely identify a service. Usually, the version is the version of the service binary itself."}),(0,s.jsx)(n.td,{children:"2.1.0.2.0"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"components"}),(0,s.jsx)(n.td,{children:"the list of component that the service is comprised of"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"<check out HDFS metainfo>"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"osSpecifics"}),(0,s.jsx)(n.td,{children:"OS specific package information for the service"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"<check out HDFS metainfo>"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"commandScript"}),(0,s.jsx)(n.td,{children:"service level commands may also be defined. The command is executed on a component instance that is a client"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"<check out HDFS metainfo>"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"comment"}),(0,s.jsx)(n.td,{children:"a short description describing the service"}),(0,s.jsx)(n.td,{children:"Apache Hadoop Distributed File System"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"requiredServices"}),(0,s.jsx)(n.td,{children:"what other services that should be present on the cluster"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"<check out HDFS metainfo>"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"configuration-dependencies"}),(0,s.jsx)(n.td,{children:"configuration files that are expected by the service (config files owned by other services are specified in this list)"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"<check out HDFS metainfo>"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"restartRequiredAfterRackChange"}),(0,s.jsx)(n.td,{children:"Restart Required After Rack Change"}),(0,s.jsx)(n.td,{children:"true / false"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"configuration-dir"}),(0,s.jsx)(n.td,{children:"Use this to specify a different config directory if not 'configuration'"}),(0,s.jsx)(n.td,{children:"-"})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"service/components - A service contains several components. The fields associated with a component are"}),":"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Feild"}),(0,s.jsx)(n.th,{children:"What is it used for"}),(0,s.jsx)(n.th,{children:"Sample Values"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"name"}),(0,s.jsx)(n.td,{children:"name of the component"}),(0,s.jsx)(n.td,{children:"HDFS"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"displayName"}),(0,s.jsx)(n.td,{children:"display name of the component."}),(0,s.jsx)(n.td,{children:"HDFS"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"category"}),(0,s.jsx)(n.td,{children:"type of the component - MASTER, SLAVE, and CLIENT"}),(0,s.jsx)(n.td,{children:"2.1.0.2.0"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"commandScript"}),(0,s.jsx)(n.td,{children:"application wide commands may also be defined. The command is executed on a component instance that is a client"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"<check out HDFS metainfo>"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cardinality"}),(0,s.jsx)(n.td,{children:"allowed/expected number of instances"}),(0,s.jsx)(n.td,{children:"For example, 1-2 for MASTER, 1+ for Slave"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"reassignAllowed"}),(0,s.jsx)(n.td,{children:"whether the component can be reassigned / moved to a different host."}),(0,s.jsx)(n.td,{children:"true / false"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"versionAdvertised"}),(0,s.jsx)(n.td,{children:"does the component advertise its version - used during rolling/express upgrade"}),(0,s.jsx)(n.td,{children:"Apache Hadoop Distributed File System"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"timelineAppid"}),(0,s.jsx)(n.td,{children:"This will be the component name under which the metrics from this component will be collected."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"<check out HDFS metainfo>"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"dependencies"}),(0,s.jsx)(n.td,{children:"the list of components that this component depends on"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"<check out HDFS metainfo>"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"customCommands"}),(0,s.jsx)(n.td,{children:"a set of custom commands associated with the component in addition to standard commands."}),(0,s.jsx)(n.td,{children:"RESTART_LLAP (Check out HIVE metainfo)"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"service/osSpecifics - OS specific package names (rpm or deb packages)"})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Feild"}),(0,s.jsx)(n.th,{children:"What is it used for"}),(0,s.jsx)(n.th,{children:"Sample Values"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"osFamily"}),(0,s.jsx)(n.td,{children:"the os family for which the package is applicable"}),(0,s.jsxs)(n.td,{children:["any => all",(0,s.jsx)("br",{}),"amazon2015,redhat6,debian7,ubuntu12,ubuntu14,ubuntu16"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"packages"}),(0,s.jsx)(n.td,{children:"list of packages that are needed to deploy the service"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"<check out HDFS metainfo>"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"package/name"}),(0,s.jsx)(n.td,{children:"name of the package (will be used by the yum/zypper/apt commands)"}),(0,s.jsx)(n.td,{children:"Eg hadoop-lzo."})]})]})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"service/commandScript - the script that implements service check"})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Feild"}),(0,s.jsx)(n.th,{children:"What is it used for"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"script"}),(0,s.jsx)(n.td,{children:"the relative path to the script"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"scriptType"}),(0,s.jsx)(n.td,{children:"the type of the script, currently only supported type is PYTHON"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"timeout"}),(0,s.jsx)(n.td,{children:"custom timeout for the command - this supersedes ambari default"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"sample values:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<commandScript>\n  <script>scripts/service_check.py<\/script>\n  <scriptType>PYTHON</scriptType>\n  <timeout>300</timeout>\n</commandScript>\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"service/component/dependencies/dependency"})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Feild"}),(0,s.jsx)(n.th,{children:"What is it used for"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"name"}),(0,s.jsx)(n.td,{children:"name of the component it depends on"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"scope"}),(0,s.jsxs)(n.td,{children:["cluster / host. specifies whether the dependent component",(0,s.jsx)("br",{}),"should be present in the same cluster or the same host."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"auto-deploy"}),(0,s.jsx)(n.td,{children:"custom timeout for the command - this supersedes ambari default"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"conditions"}),(0,s.jsx)(n.td,{children:"Conditions in which this dependency exists. For example, the presence of a property in a config."})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"sample values:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<dependency>\n  <name>HDFS/ZKFC</name>\n  <scope>cluster</scope>\n  <auto-deploy>\n    <enabled>false</enabled>\n  </auto-deploy>\n  <conditions>\n    <condition xsi:type="propertyExists">\n      <configType>hdfs-site</configType>\n      <property>dfs.nameservices</property>\n    </condition>\n  </conditions>\n</dependency>\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"service/component/commandScript - the script that implements components specific default commands (Similar to service/commandScript )"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"service/component/logs - provides log search integration."})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Feild"}),(0,s.jsx)(n.th,{children:"What is it used for"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"logId"}),(0,s.jsx)(n.td,{children:"logid of the component"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"primary"}),(0,s.jsx)(n.td,{children:"primary log id or not."})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"sample values:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<log>\n  <logId>hdfs_namenode</logId>\n  <primary>true</primary>\n</log>\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"service/component/customCommand - custom commands can be added to components."})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"name"}),": name of the custom command"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"commandScript"}),": the details of the script that implements the custom command"]}),"\n",(0,s.jsx)(n.li,{children:"commandScript/script: the relative path to the script"}),"\n",(0,s.jsx)(n.li,{children:"commandScript/scriptType: the type of the script, currently only supported type is PYTHON"}),"\n",(0,s.jsx)(n.li,{children:"commandScript/timeout: custom timeout for the command - this supersedes ambari default"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"service/component/configFiles - list of config files to be available when client config is to be downloaded (used to configure service clients that are not managed by Ambari)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"type"}),": the type of file to be generated, xml or env sh, yaml, etc"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"fileName"}),": name of the generated file"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"dictionary"}),": data dictionary that contains the config properties (relevant to how ambari manages config bags internally)"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"sample-metainfoxml",children:"Sample metainfo.xml"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<metainfo>\n  <schemaVersion>2.0</schemaVersion>\n  <services>\n    <service>\n      <name>HBASE</name>\n      <displayName>HBase</displayName>\n      <comment>Non-relational distributed database and centralized service for configuration management &amp;\n synchronization\n      </comment>\n      <version>0.96.0.2.0</version>\n      <components>\n        <component>\n          <name>HBASE_MASTER</name>\n          <displayName>HBase Master</displayName>\n          <category>MASTER</category>\n          <cardinality>1+</cardinality>\n          <versionAdvertised>true</versionAdvertised>\n          <timelineAppid>HBASE</timelineAppid>\n          <dependencies>\n            <dependency>\n              <name>HDFS/HDFS_CLIENT</name>\n              <scope>host</scope>\n              <auto-deploy>\n                <enabled>true</enabled>\n              </auto-deploy>\n            </dependency>\n            <dependency>\n              <name>ZOOKEEPER/ZOOKEEPER_SERVER</name>\n              <scope>cluster</scope>\n              <auto-deploy>\n                <enabled>true</enabled>\n                <co-locate>HBASE/HBASE_MASTER</co-locate>\n              </auto-deploy>\n            </dependency>\n          </dependencies>\n          <commandScript>\n            <script>scripts/hbase_master.py<\/script>\n            <scriptType>PYTHON</scriptType>\n            <timeout>1200</timeout>\n          </commandScript>\n          <customCommands>\n            <customCommand>\n              <name>DECOMMISSION</name>\n              <commandScript>\n                <script>scripts/hbase_master.py<\/script>\n                <scriptType>PYTHON</scriptType>\n                <timeout>600</timeout>\n              </commandScript>\n            </customCommand>\n          </customCommands>\n        </component>\n\n        <component>\n          <name>HBASE_REGIONSERVER</name>\n          <displayName>RegionServer</displayName>\n          <category>SLAVE</category>\n          <cardinality>1+</cardinality>\n          <versionAdvertised>true</versionAdvertised>\n          <timelineAppid>HBASE</timelineAppid>\n          <commandScript>\n            <script>scripts/hbase_regionserver.py<\/script>\n            <scriptType>PYTHON</scriptType>\n          </commandScript>\n        </component>\n\n        <component>\n          <name>HBASE_CLIENT</name>\n          <displayName>HBase Client</displayName>\n          <category>CLIENT</category>\n          <cardinality>1+</cardinality>\n          <versionAdvertised>true</versionAdvertised>\n          <commandScript>\n            <script>scripts/hbase_client.py<\/script>\n            <scriptType>PYTHON</scriptType>\n          </commandScript>\n          <configFiles>\n            <configFile>\n              <type>xml</type>\n              <fileName>hbase-site.xml</fileName>\n              <dictionaryName>hbase-site</dictionaryName>\n            </configFile>\n            <configFile>\n              <type>env</type>\n              <fileName>hbase-env.sh</fileName>\n              <dictionaryName>hbase-env</dictionaryName>\n            </configFile>\n          </configFiles>\n        </component>\n      </components>\n\n      <osSpecifics>\n        <osSpecific>\n          <osFamily>any</osFamily>\n          <packages>\n            <package>\n              <name>hbase</name>\n            </package>\n          </packages>\n        </osSpecific>\n      </osSpecifics>\n\n      <commandScript>\n        <script>scripts/service_check.py<\/script>\n        <scriptType>PYTHON</scriptType>\n        <timeout>300</timeout>\n      </commandScript>\n      \n      <requiredServices>\n        <service>ZOOKEEPER</service>\n        <service>HDFS</service>\n      </requiredServices>\n\n      <configuration-dependencies>\n        <config-type>core-site</config-type>\n        <config-type>hbase-site</config-type>\n        <config-type>ranger-hbase-policymgr-ssl</config-type>\n        <config-type>ranger-hbase-security</config-type>\n      </configuration-dependencies>\n\n    </service>\n  </services>\n</metainfo>\n"})})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);