"use strict";(self.webpackChunkambari_website=self.webpackChunkambari_website||[]).push([[6907],{28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var i=s(96540);const a={},t=i.createContext(a);function r(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(t.Provider,{value:n},e.children)}},57639:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"quick-start/environment-setup/bare-metal-kvm-setup","title":"Bare Metal and KVM Environment Setup for Apache Ambari","description":"This guide provides instructions for configuring existing bare metal servers or KVM virtual machines for Apache Ambari installation. It assumes you already have at least 3 machines (physical or virtual) available and focuses on the necessary system configurations to prepare them for Ambari deployment.","source":"@site/docs/quick-start/environment-setup/bare-metal-kvm-setup.md","sourceDirName":"quick-start/environment-setup","slug":"/quick-start/environment-setup/bare-metal-kvm-setup","permalink":"/docs/next/quick-start/environment-setup/bare-metal-kvm-setup","draft":false,"unlisted":false,"editUrl":"https://github.com/vivostar/vivostar.github.io/tree/master/docs/quick-start/environment-setup/bare-metal-kvm-setup.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"ambariSidebar","previous":{"title":"Docker Environment Setup for Apache Ambari","permalink":"/docs/next/quick-start/environment-setup/docker-environment-setup"},"next":{"title":"Ambari Installation Guide","permalink":"/docs/next/quick-start/installation-guide"}}');var a=s(74848),t=s(28453);const r={sidebar_position:4},o="Bare Metal and KVM Environment Setup for Apache Ambari",l={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Machine Roles",id:"machine-roles",level:2},{value:"1. Configure Hostnames and Networking",id:"1-configure-hostnames-and-networking",level:2},{value:"1.1 Set Hostnames",id:"11-set-hostnames",level:3},{value:"1.2 Configure /etc/hosts on All Machines",id:"12-configure-etchosts-on-all-machines",level:3},{value:"2. Configure Security Settings",id:"2-configure-security-settings",level:2},{value:"2.1 Disable SELinux on All Machines",id:"21-disable-selinux-on-all-machines",level:3},{value:"2.2 Configure Firewall on All Machines",id:"22-configure-firewall-on-all-machines",level:3},{value:"3. Configure SSH Access",id:"3-configure-ssh-access",level:2},{value:"3.1 Generate SSH Key on the Server Machine",id:"31-generate-ssh-key-on-the-server-machine",level:3},{value:"3.2 Configure SSH for Password Authentication",id:"32-configure-ssh-for-password-authentication",level:3},{value:"3.3 Distribute SSH Keys from Server to Agents",id:"33-distribute-ssh-keys-from-server-to-agents",level:3},{value:"4. Install Required Packages on All Machines",id:"4-install-required-packages-on-all-machines",level:2},{value:"4.1 Update the System and Install Basic Utilities",id:"41-update-the-system-and-install-basic-utilities",level:3},{value:"4.2 Enable Development Repository",id:"42-enable-development-repository",level:3},{value:"4.3 Install Java on All Machines",id:"43-install-java-on-all-machines",level:3},{value:"5. Configure Network Time Protocol (NTP)",id:"5-configure-network-time-protocol-ntp",level:2},{value:"6. Verify the Environment",id:"6-verify-the-environment",level:2},{value:"6.1 Check Network Connectivity",id:"61-check-network-connectivity",level:3},{value:"6.2 Verify SSH Access",id:"62-verify-ssh-access",level:3},{value:"6.3 Verify Security Settings",id:"63-verify-security-settings",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Network Issues",id:"network-issues",level:3},{value:"SSH Issues",id:"ssh-issues",level:3},{value:"SELinux Issues",id:"selinux-issues",level:3},{value:"Next Steps",id:"next-steps",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"bare-metal-and-kvm-environment-setup-for-apache-ambari",children:"Bare Metal and KVM Environment Setup for Apache Ambari"})}),"\n",(0,a.jsx)(n.p,{children:"This guide provides instructions for configuring existing bare metal servers or KVM virtual machines for Apache Ambari installation. It assumes you already have at least 3 machines (physical or virtual) available and focuses on the necessary system configurations to prepare them for Ambari deployment."}),"\n",(0,a.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"At least 3 machines (physical servers or KVM virtual machines)"}),"\n",(0,a.jsx)(n.li,{children:"Rocky Linux 8 (or compatible RHEL-based distribution) installed on all machines"}),"\n",(0,a.jsx)(n.li,{children:"Root access to all machines"}),"\n",(0,a.jsx)(n.li,{children:"Network connectivity between all machines"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"machine-roles",children:"Machine Roles"}),"\n",(0,a.jsx)(n.p,{children:"For a basic Ambari cluster, you'll need to designate your machines for the following roles:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Machine 1"}),": Ambari Server"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Machine 2, 3, ..."}),": Ambari Agents"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"All machines will need similar base configurations, with some specific settings for the Ambari Server."}),"\n",(0,a.jsx)(n.h2,{id:"1-configure-hostnames-and-networking",children:"1. Configure Hostnames and Networking"}),"\n",(0,a.jsx)(n.h3,{id:"11-set-hostnames",children:"1.1 Set Hostnames"}),"\n",(0,a.jsx)(n.p,{children:"If you haven't already configured hostnames for your machines, you can set them as follows:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Example hostname configuration (only if needed)\nsudo hostnamectl set-hostname your-preferred-hostname\n"})}),"\n",(0,a.jsx)(n.p,{children:"The specific hostnames you choose don't matter, but they should be:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Unique across all machines"}),"\n",(0,a.jsx)(n.li,{children:"Fully qualified domain names (FQDN) if possible"}),"\n",(0,a.jsx)(n.li,{children:"Consistent with your network naming conventions"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"If you've already configured your hostnames, you can skip this step."}),"\n",(0,a.jsx)(n.h3,{id:"12-configure-etchosts-on-all-machines",children:"1.2 Configure /etc/hosts on All Machines"}),"\n",(0,a.jsxs)(n.p,{children:["Ensure all machines can resolve each other's hostnames by editing the ",(0,a.jsx)(n.code,{children:"/etc/hosts"})," file on each machine:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Login as root\nsudo su -\n\n# Edit the hosts file\nvi /etc/hosts\n\n# Add entries for all machines (use your actual IP addresses and hostnames)\n192.168.1.10 server-hostname\n192.168.1.11 agent-machine1-hostname\n192.168.1.12 agent-machine2-hostname\n# Add more entries for additional machines\n"})}),"\n",(0,a.jsx)(n.p,{children:"Make sure these changes are identical across all machines. This step is critical for Ambari to function properly, as it relies on hostname resolution for communication between the server and agents."}),"\n",(0,a.jsx)(n.h2,{id:"2-configure-security-settings",children:"2. Configure Security Settings"}),"\n",(0,a.jsx)(n.h3,{id:"21-disable-selinux-on-all-machines",children:"2.1 Disable SELinux on All Machines"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Temporarily disable SELinux\nsetenforce 0\n\n# Permanently disable SELinux\nsed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config\n"})}),"\n",(0,a.jsx)(n.h3,{id:"22-configure-firewall-on-all-machines",children:"2.2 Configure Firewall on All Machines"}),"\n",(0,a.jsx)(n.p,{children:"For development environments, you may disable the firewall:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Disable and stop firewalld\nsystemctl disable firewalld\nsystemctl stop firewalld\n"})}),"\n",(0,a.jsx)(n.h2,{id:"3-configure-ssh-access",children:"3. Configure SSH Access"}),"\n",(0,a.jsx)(n.p,{children:"Similar to the Vagrant environment setup, you need to configure passwordless SSH access from the Ambari Server to all agent machines."}),"\n",(0,a.jsx)(n.h3,{id:"31-generate-ssh-key-on-the-server-machine",children:"3.1 Generate SSH Key on the Server Machine"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# Login as root on the server machine\nsudo su -\n\n# Generate SSH key if not exists\nif [ ! -f ~/.ssh/id_rsa ]; then\n  ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa\nfi\n'})}),"\n",(0,a.jsx)(n.h3,{id:"32-configure-ssh-for-password-authentication",children:"3.2 Configure SSH for Password Authentication"}),"\n",(0,a.jsx)(n.p,{children:"Edit the SSH configuration on all machines if not already configured:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Edit sshd_config\nvi /etc/ssh/sshd_config\n\n# Ensure these lines are set\nPasswordAuthentication yes\nPermitRootLogin yes\n\n# Restart SSH service\nsystemctl restart sshd\n"})}),"\n",(0,a.jsx)(n.h3,{id:"33-distribute-ssh-keys-from-server-to-agents",children:"3.3 Distribute SSH Keys from Server to Agents"}),"\n",(0,a.jsx)(n.p,{children:"From the Ambari server machine, copy your SSH key to each agent machine:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# Copy SSH key to all agent machines (replace with your actual hostnames)\nssh-copy-id -o StrictHostKeyChecking=no root@agent-machine1-hostname\nssh-copy-id -o StrictHostKeyChecking=no root@agent-machine2-hostname\n# Repeat for additional agent machines\n\n# Test SSH connections (replace with your actual hostnames)\nssh root@agent-machine1-hostname echo "Connection successful"\nssh root@agent-machine2-hostname echo "Connection successful"\n# Test additional connections as needed\n'})}),"\n",(0,a.jsx)(n.h2,{id:"4-install-required-packages-on-all-machines",children:"4. Install Required Packages on All Machines"}),"\n",(0,a.jsx)(n.h3,{id:"41-update-the-system-and-install-basic-utilities",children:"4.1 Update the System and Install Basic Utilities"}),"\n",(0,a.jsx)(n.p,{children:"Run these commands on all machines:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Update package lists and upgrade packages\ndnf update -y\n\n# Install basic utilities\ndnf install -y sudo openssh-server openssh-clients which iproute net-tools less vim-enhanced\ndnf install -y wget curl tar unzip git\n"})}),"\n",(0,a.jsx)(n.h3,{id:"42-enable-development-repository",children:"4.2 Enable Development Repository"}),"\n",(0,a.jsx)(n.p,{children:"The Rocky Linux development repository needs to be enabled on all machines to install dependencies required for Ambari:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# Edit the Rocky-Devel repository configuration\nvi /etc/yum.repos.d/Rocky-Devel.repo\n\n# There are two possible scenarios:\n# 1. If all lines are commented (start with #), uncomment all lines\n# 2. If you see "enabled=0", change it to "enabled=1"\n\n# After editing, verify the repository is enabled\ndnf repolist | grep devel\n'})}),"\n",(0,a.jsx)(n.h3,{id:"43-install-java-on-all-machines",children:"4.3 Install Java on All Machines"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Install OpenJDK 8\ndnf install -y java-1.8.0-openjdk-devel\n\n# Verify Java installation\njava -version\n"})}),"\n",(0,a.jsx)(n.h2,{id:"5-configure-network-time-protocol-ntp",children:"5. Configure Network Time Protocol (NTP)"}),"\n",(0,a.jsx)(n.p,{children:"Synchronize time across all machines:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Install chrony (NTP implementation)\ndnf install -y chrony\n\n# Start and enable chronyd service\nsystemctl start chronyd\nsystemctl enable chronyd\n\n# Verify time synchronization\nchronyc sources\n"})}),"\n",(0,a.jsx)(n.h2,{id:"6-verify-the-environment",children:"6. Verify the Environment"}),"\n",(0,a.jsx)(n.h3,{id:"61-check-network-connectivity",children:"6.1 Check Network Connectivity"}),"\n",(0,a.jsx)(n.p,{children:"From the server machine, test connectivity to all agent machines:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Test connectivity to all agent machines (replace with your actual hostnames)\nping -c 2 agent-machine1-hostname\nping -c 2 agent-machine2-hostname\n# Test additional machines as needed\n"})}),"\n",(0,a.jsx)(n.h3,{id:"62-verify-ssh-access",children:"6.2 Verify SSH Access"}),"\n",(0,a.jsx)(n.p,{children:"From the server machine, verify SSH access to all agent machines:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Verify SSH access to all agent machines (replace with your actual hostnames)\nssh root@agent-machine1-hostname hostname\nssh root@agent-machine2-hostname hostname\n# Verify additional machines as needed\n"})}),"\n",(0,a.jsx)(n.h3,{id:"63-verify-security-settings",children:"6.3 Verify Security Settings"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Check SELinux status on all machines (replace with your actual hostnames)\nfor host in server-hostname agent-machine1-hostname agent-machine2-hostname; do\n  echo \"=== $host SELinux Status ===\"\n  ssh root@$host getenforce  # Should show 'Disabled'\ndone\n\n# Check firewall status on all machines (replace with your actual hostnames)\nfor host in server-hostname agent-machine1-hostname agent-machine2-hostname; do\n  echo \"=== $host Firewall Status ===\"\n  ssh root@$host systemctl status firewalld  # Should show 'inactive' for dev environments\ndone\n"})}),"\n",(0,a.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,a.jsx)(n.h3,{id:"network-issues",children:"Network Issues"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Check network interfaces\nip addr show\n\n# Test DNS resolution (replace with your actual hostnames)\nnslookup server-hostname\nnslookup agent-machine1-hostname\nnslookup agent-machine2-hostname\n"})}),"\n",(0,a.jsx)(n.h3,{id:"ssh-issues",children:"SSH Issues"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Check SSH service status\nsystemctl status sshd\n\n# Verify SSH key permissions\nls -la ~/.ssh/\n\n# Check SSH configuration\ncat /etc/ssh/sshd_config | grep PasswordAuthentication\ncat /etc/ssh/sshd_config | grep PermitRootLogin\n"})}),"\n",(0,a.jsx)(n.h3,{id:"selinux-issues",children:"SELinux Issues"}),"\n",(0,a.jsx)(n.p,{children:"If you encounter permission problems even after disabling SELinux:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Verify SELinux is disabled\ngetenforce\n\n# If it shows 'Enforcing', disable it again\nsetenforce 0\n"})}),"\n",(0,a.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,a.jsxs)(n.p,{children:["Now that your bare metal or KVM environment is configured, proceed to the ",(0,a.jsx)(n.a,{href:"/docs/next/quick-start/installation-guide",children:"Installation Guide"})," to install and configure Ambari Server and Agents. The installation guide provides standardized instructions that work across all environments (Vagrant, Docker, and bare metal/KVM)."]}),"\n",(0,a.jsx)(n.p,{children:"When following the installation guide, remember:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"All commands should be run as root"}),"\n",(0,a.jsx)(n.li,{children:"Run Ambari Server setup and installation on the designated server machine"}),"\n",(0,a.jsx)(n.li,{children:"Run Ambari Agent installation on all machines"}),"\n",(0,a.jsxs)(n.li,{children:["Access the Ambari Web UI via the server machine's IP address on port 8080 (",(0,a.jsx)(n.a,{href:"http://server-hostname:8080",children:"http://server-hostname:8080"}),")"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}}}]);