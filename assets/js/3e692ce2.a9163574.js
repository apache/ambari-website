"use strict";(self.webpackChunkambari_website=self.webpackChunkambari_website||[]).push([[2253],{3905:(e,a,r)=>{r.d(a,{Zo:()=>p,kt:()=>d});var t=r(67294);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function s(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?s(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function i(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},s=Object.keys(e);for(t=0;t<s.length;t++)r=s[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)r=s[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=t.createContext({}),m=function(e){var a=t.useContext(o),r=a;return e&&(r="function"==typeof e?e(a):l(l({},a),e)),r},p=function(e){var a=m(e.components);return t.createElement(o.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},c=t.forwardRef((function(e,a){var r=e.components,n=e.mdxType,s=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=m(r),d=n,b=c["".concat(o,".").concat(d)]||c[d]||u[d]||s;return r?t.createElement(b,l(l({ref:a},p),{},{components:r})):t.createElement(b,l({ref:a},p))}));function d(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var s=r.length,l=new Array(s);l[0]=c;var i={};for(var o in a)hasOwnProperty.call(a,o)&&(i[o]=a[o]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var m=2;m<s;m++)l[m]=r[m];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}c.displayName="MDXCreateElement"},61059:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>m});var t=r(87462),n=(r(67294),r(3905));const s={},l="Ambari Installation Guide",i={unversionedId:"quick-start/installation-guide",id:"version-3.0.0/quick-start/installation-guide",title:"Ambari Installation Guide",description:"This guide covers the installation and setup of Apache Ambari on bare metal, KVM, Docker, or Vagrant environments.",source:"@site/versioned_docs/version-3.0.0/quick-start/installation-guide.md",sourceDirName:"quick-start",slug:"/quick-start/installation-guide",permalink:"/docs/quick-start/installation-guide",draft:!1,editUrl:"https://github.com/vivostar/vivostar.github.io/tree/master/versioned_docs/version-3.0.0/quick-start/installation-guide.md",tags:[],version:"3.0.0",frontMatter:{},sidebar:"ambariSidebar",previous:{title:"Bare Metal and KVM Environment Setup for Apache Ambari",permalink:"/docs/quick-start/environment-setup/bare-metal-kvm-setup"},next:{title:"Ambari Design",permalink:"/docs/ambari-design/"}},o={},m=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"1. Setting up Ambari Repository",id:"1-setting-up-ambari-repository",level:2},{value:"2. Install Dependencies and Ambari Agent",id:"2-install-dependencies-and-ambari-agent",level:2},{value:"3. Install Ambari Server",id:"3-install-ambari-server",level:2},{value:"4. Database Setup",id:"4-database-setup",level:2},{value:"4.1 MySQL Setup",id:"41-mysql-setup",level:3},{value:"4.2 PostgreSQL Setup",id:"42-postgresql-setup",level:3},{value:"5. Configure Ambari Server",id:"5-configure-ambari-server",level:2},{value:"For PostgreSQL:",id:"for-postgresql",level:3},{value:"For MySQL:",id:"for-mysql",level:3},{value:"6. Start Services",id:"6-start-services",level:2},{value:"7. Access Ambari Web Interface",id:"7-access-ambari-web-interface",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}],p={toc:m};function u(e){let{components:a,...r}=e;return(0,n.kt)("wrapper",(0,t.Z)({},p,r,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"ambari-installation-guide"},"Ambari Installation Guide"),(0,n.kt)("p",null,"This guide covers the installation and setup of Apache Ambari on bare metal, KVM, Docker, or Vagrant environments."),(0,n.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,n.kt)("p",null,"Ensure you have a working environment (bare metal, KVM, Docker, or ",(0,n.kt)("a",{parentName:"p",href:"/docs/quick-start/environment-setup/vagrant-environment-setup"},"Vagrant setup"),") before proceeding."),(0,n.kt)("h2",{id:"1-setting-up-ambari-repository"},"1. Setting up Ambari Repository"),(0,n.kt)("p",null,"Create a local Ambari RPM repository:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"createrepo -o /path /path\n\n# Create repository configuration\ncat > /etc/yum.repos.d/ambari_repo.repo << EOF\n[ambari_repo]\nbaseurl = file:///vagrant_data/\ngpgcheck = 0\nname = ambari_repository\nEOF\n")),(0,n.kt)("h2",{id:"2-install-dependencies-and-ambari-agent"},"2. Install Dependencies and Ambari Agent"),(0,n.kt)("p",null,"Install the following packages on all hosts:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"# Install required dependencies\nyum install -y python3-distro\nyum install -y java-17-openjdk-devel\nyum install -y java-1.8.0-openjdk-devel\nyum install -y ambari-agent\n")),(0,n.kt)("h2",{id:"3-install-ambari-server"},"3. Install Ambari Server"),(0,n.kt)("p",null,"On the designated Ambari server machine:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"yum install -y python3-psycopg2\nyum install -y ambari-server\n")),(0,n.kt)("h2",{id:"4-database-setup"},"4. Database Setup"),(0,n.kt)("p",null,"Choose either MySQL or PostgreSQL for your database backend."),(0,n.kt)("h3",{id:"41-mysql-setup"},"4.1 MySQL Setup"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Remove existing MySQL packages:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"rpm -qa | grep mysql\nrpm -ev <package-name> --nodeps\n")),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},"Set up MySQL 8.0 repository:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"yum -y install https://dev.mysql.com/get/mysql80-community-release-el8-1.noarch.rpm\n")),(0,n.kt)("ol",{start:3},(0,n.kt)("li",{parentName:"ol"},"Install and start MySQL:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"yum -y install mysql-server\nsystemctl start mysqld.service\nsystemctl enable mysqld.service\n")),(0,n.kt)("ol",{start:4},(0,n.kt)("li",{parentName:"ol"},"Configure MySQL users and databases:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"-- Create Ambari user and grant privileges\nCREATE USER 'ambari'@'localhost' IDENTIFIED BY 'ambari';\nGRANT ALL PRIVILEGES ON *.* TO 'ambari'@'localhost';\nCREATE USER 'ambari'@'%' IDENTIFIED BY 'ambari';\nGRANT ALL PRIVILEGES ON *.* TO 'ambari'@'%';\n\n-- Create required databases\nCREATE DATABASE ambari CHARACTER SET utf8 COLLATE utf8_general_ci;\nCREATE DATABASE hive;\nCREATE DATABASE ranger;\nCREATE DATABASE rangerkms;\n\n-- Create service users\nCREATE USER 'hive'@'%' IDENTIFIED BY 'hive';\nGRANT ALL PRIVILEGES ON hive.* TO 'hive'@'%';\n\nCREATE USER 'ranger'@'%' IDENTIFIED BY 'ranger';\nGRANT ALL PRIVILEGES ON *.* TO 'ranger'@'%' WITH GRANT OPTION;\n\nCREATE USER 'rangerkms'@'%' IDENTIFIED BY 'rangerkms';\nGRANT ALL PRIVILEGES ON rangerkms.* TO 'rangerkms'@'%';\n\nFLUSH PRIVILEGES;\n")),(0,n.kt)("ol",{start:5},(0,n.kt)("li",{parentName:"ol"},"Import Ambari schema:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"mysql -uambari -pambari ambari < /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql\n")),(0,n.kt)("h3",{id:"42-postgresql-setup"},"4.2 PostgreSQL Setup"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Install and initialize PostgreSQL:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"yum install -y postgresql\n/usr/bin/postgresql-setup --initdb\n")),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},"Configure PostgreSQL:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"# Edit postgresql.conf\nsed -i \"s/#listen_addresses = 'localhost'/listen_addresses = '*'/\" /var/lib/pgsql/data/postgresql.conf\n\n# Add client authentication rules to pg_hba.conf\ncat >> /var/lib/pgsql/data/pg_hba.conf << EOF\nhost ambari ambari 0.0.0.0/0 md5\nhost hive hive 0.0.0.0/0 md5\nhost ranger ranger 0.0.0.0/0 md5\nhost rangerkms rangerkms 0.0.0.0/0 md5\nEOF\n")),(0,n.kt)("ol",{start:3},(0,n.kt)("li",{parentName:"ol"},"Create users and databases:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"-- As postgres user\nCREATE ROLE \"ambari\" LOGIN PASSWORD 'admin' NOINHERIT;\nCREATE DATABASE ambari;\nGRANT ALL PRIVILEGES ON DATABASE ambari TO ambari;\n")),(0,n.kt)("ol",{start:4},(0,n.kt)("li",{parentName:"ol"},"Import schema:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"PGPASSWORD='admin' psql -h localhost -p 5432 -U ambari -d ambari \\\n  -f /var/lib/ambari-server/resources/Ambari-DDL-Postgres-CREATE.sql\n")),(0,n.kt)("h2",{id:"5-configure-ambari-server"},"5. Configure Ambari Server"),(0,n.kt)("h3",{id:"for-postgresql"},"For PostgreSQL:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"# Setup JDBC driver\nambari-server setup --jdbc-db=postgres --jdbc-driver=/usr/share/java/postgresql-42.7.3.jar\n\n# Configure Ambari server\nambari-server setup -s \\\n  -j /usr/lib/jvm/java-1.8.0-openjdk \\\n  --ambari-java-home /usr/lib/jvm/java-17-openjdk \\\n  --database=postgres \\\n  --databasehost=localhost \\\n  --databaseport=5432 \\\n  --databasename=ambari \\\n  --databaseusername=ambari \\\n  --databasepassword=admin\n")),(0,n.kt)("h3",{id:"for-mysql"},"For MySQL:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'# Download MySQL JDBC driver\nwget https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.28/mysql-connector-java-8.0.28.jar \\\n  -O /usr/share/java/mysql-connector-java.jar\n\n# Setup JDBC driver\nambari-server setup --jdbc-db=mysql --jdbc-driver=/usr/share/java/mysql-connector-java.jar\n\n# Configure MySQL 8 compatibility\necho "server.jdbc.url=jdbc:mysql://localhost:3306/ambari?useSSL=true&verifyServerCertificate=false&enabledTLSProtocols=TLSv1.2" \\\n  >> /etc/ambari-server/conf/ambari.properties\n\n# Configure Ambari server\nambari-server setup -s \\\n  -j /usr/lib/jvm/java-1.8.0-openjdk \\\n  --ambari-java-home /usr/lib/jvm/java-17-openjdk \\\n  --database=mysql \\\n  --databasehost=localhost \\\n  --databaseport=3306 \\\n  --databasename=ambari \\\n  --databaseusername=ambari \\\n  --databasepassword=ambari\n')),(0,n.kt)("h2",{id:"6-start-services"},"6. Start Services"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Start Ambari Server:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"ambari-server start\n")),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},"Configure and start Ambari Agents on all hosts:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'# Edit ambari-agent configuration\nsed -i "s/hostname=.*/hostname=your_ambari_server_hostname/" /etc/ambari-agent/conf/ambari-agent.ini\n\n# Start agent\nambari-agent start\n')),(0,n.kt)("h2",{id:"7-access-ambari-web-interface"},"7. Access Ambari Web Interface"),(0,n.kt)("p",null,"Once all services are started, access the Ambari Web Interface at:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"http://your_ambari_server_hostname:8080\n")),(0,n.kt)("p",null,"Default credentials:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Username: admin"),(0,n.kt)("li",{parentName:"ul"},"Password: admin")),(0,n.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"If you encounter firewall issues, disable it (for development environments only):")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl stop firewalld\nsystemctl disable firewalld\n")),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Ensure proper hostname resolution by configuring ",(0,n.kt)("inlineCode",{parentName:"p"},"/etc/hosts")," on all nodes.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"For MySQL 8 connection issues, verify the JDBC URL includes the correct SSL parameters in ",(0,n.kt)("inlineCode",{parentName:"p"},"ambari.properties"),".")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Check service logs:"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Ambari Server: ",(0,n.kt)("inlineCode",{parentName:"li"},"/var/log/ambari-server/ambari-server.log")),(0,n.kt)("li",{parentName:"ul"},"Ambari Agent: ",(0,n.kt)("inlineCode",{parentName:"li"},"/var/log/ambari-agent/ambari-agent.log"))))}u.isMDXComponent=!0}}]);